package api;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.is;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import org.junit.Test;
import io.restassured.http.ContentType;




public class TestCrudAction {
	private final String TOKEN = "0e2c19917d53f7aff9ea081922569f3c8322c131d1675556641b5de5a9ce88e5";
	private final String URL = "https://gorest.co.in/";

	@Test
	public void createNewUserAndPost() {

		String userName = "UserName" + new Random().nextInt(10000);
		String userEmail = "useremail_" + new Random().nextInt(10000) + "@email.com";
		String field = "TestTitle";
		String message = "Message text 123";
		
		String endpointPostUser = "public-api/users";
		
		Map user = new HashMap<>();
		user.put("name", userName);
		user.put("email", userEmail);
		user.put("gender", "Female");
		user.put("status", "Active");
		
		// Create new user
		int userId = given(). 
			auth().  
			oauth2(TOKEN). 
			contentType(ContentType.JSON). 
			body(user).  
			log().all().
		when().
			post(URL + endpointPostUser). 
		then(). 
			assertThat().
//			body("code", is(201)). 
			log().all().extract().
			path("data.id");
		
		
		// post with new user
		
		
		Map messageContent = new HashMap<>();
		message.put("field", field);
		message.put("message", message);
		
	
		
		
		String endpointPostUserPost = "public-api/users/{userId}/posts/";
		
		given().
		pathParam("userId", userId). 
		auth().  
		oauth2(TOKEN). 
		contentType(ContentType.JSON). 
		body(messageContent).  

		log().all().
	when().
		post(URL + endpointPostUserPost).
	then(). 
		assertThat().
		
//		body("code", is(200)).
		log().all();
	
	

	
	// delete post
	
//		String endpointPostUserPost = "public-api/users/{userId}/posts/";
//		
//		given().
//		pathParam("userId", userId). 
//		log().all().
//	when().
//		delete(URL + endpointPostUserPost).
//	then(). 
//		assertThat().
//		
//	//	body("code", is(200)).
//		log().all();
		
		
	}

}
